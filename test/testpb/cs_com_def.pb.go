//=============this file is auto generatored, do not alert!==========

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: cs_com_def.proto

package testpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 由gen_feature_toggle自动生成，请勿手动添加
type ENUM_FeatureToggleMacroType int32

const (
	ENUM_FeatureToggleMacroType_TOGGLE_SAMPLE                     ENUM_FeatureToggleMacroType = 0  //测试
	ENUM_FeatureToggleMacroType_TOGGLE_TEST                       ENUM_FeatureToggleMacroType = 1  //测试
	ENUM_FeatureToggleMacroType_TOGGLE_MATCH                      ENUM_FeatureToggleMacroType = 2  //匹配
	ENUM_FeatureToggleMacroType_TOGGLE_EVENT                      ENUM_FeatureToggleMacroType = 3  //事件
	ENUM_FeatureToggleMacroType_TOGGLE_GUILD                      ENUM_FeatureToggleMacroType = 4  //公会
	ENUM_FeatureToggleMacroType_TOGGLE_EQUIP_SELL                 ENUM_FeatureToggleMacroType = 5  //记忆(意志)出售
	ENUM_FeatureToggleMacroType_TOGGLE_EQUIP_SWITCH               ENUM_FeatureToggleMacroType = 6  //记忆(意志)装配
	ENUM_FeatureToggleMacroType_TOGGLE_EQUIP_UPGRADE              ENUM_FeatureToggleMacroType = 7  //记忆(意志)强化
	ENUM_FeatureToggleMacroType_TOGGLE_WEAPON_STAR_UP             ENUM_FeatureToggleMacroType = 8  //意志进阶
	ENUM_FeatureToggleMacroType_TOGGLE_TEAM_CREATE_TEAM           ENUM_FeatureToggleMacroType = 9  //创建队伍
	ENUM_FeatureToggleMacroType_TOGGLE_TEAM_REQ_MATCH             ENUM_FeatureToggleMacroType = 10 //队伍匹配
	ENUM_FeatureToggleMacroType_TOGGLE_TEAM_JOIN_TEAM             ENUM_FeatureToggleMacroType = 11 //加入队伍
	ENUM_FeatureToggleMacroType_TOGGLE_BOUNTY_UNLOCK              ENUM_FeatureToggleMacroType = 12 //悬赏解锁
	ENUM_FeatureToggleMacroType_TOGGLE_RANK                       ENUM_FeatureToggleMacroType = 13 //排行榜
	ENUM_FeatureToggleMacroType_TOGGLE_MALL_SHOP                  ENUM_FeatureToggleMacroType = 14 //商城
	ENUM_FeatureToggleMacroType_TOGGLE_MALL_BUY                   ENUM_FeatureToggleMacroType = 15 //商城购买
	ENUM_FeatureToggleMacroType_TOGGLE_CHAT                       ENUM_FeatureToggleMacroType = 16 //聊天
	ENUM_FeatureToggleMacroType_TOGGLE_GLOBAL_MAIL                ENUM_FeatureToggleMacroType = 17 //全服邮件
	ENUM_FeatureToggleMacroType_TOGGLE_ASSIST_SKILL               ENUM_FeatureToggleMacroType = 18 //援护技
	ENUM_FeatureToggleMacroType_TOGGLE_GAMEPLAY_STATISTIC         ENUM_FeatureToggleMacroType = 19 //单局统计流水
	ENUM_FeatureToggleMacroType_TOGGLE_CHECK_CLIENT_VERSION_INCR  ENUM_FeatureToggleMacroType = 20 //是否要校验版本降级登录
	ENUM_FeatureToggleMacroType_TOGGLE_PC_PAY                     ENUM_FeatureToggleMacroType = 21 //点券pc支付开放开关
	ENUM_FeatureToggleMacroType_TOGGLE_TCAP_CMD_STAT              ENUM_FeatureToggleMacroType = 22 //Tcaplus状态统计开关
	ENUM_FeatureToggleMacroType_TOGGLE_ITEM_BAG_FULL_IS_FAIL      ENUM_FeatureToggleMacroType = 23 //添加道具，背包满是否当错误
	ENUM_FeatureToggleMacroType_TOGGLE_ITEM_PRESSURE_BREAK_ADDOBJ ENUM_FeatureToggleMacroType = 24 //压测 跳过加道具
	ENUM_FeatureToggleMacroType_TOGGLE_OPEN_CFG_SET               ENUM_FeatureToggleMacroType = 25 //开发配置切片, 非0表示使用切片
	ENUM_FeatureToggleMacroType_TOGGLE_GAMEPLAY_START_NOT_CONNECT ENUM_FeatureToggleMacroType = 26 //单局开始未连上服务器，是否当做掉线，非0表示当做掉线
	ENUM_FeatureToggleMacroType_TOGGLE_PVPAGENT_USE_RESUME        ENUM_FeatureToggleMacroType = 27 //pvpagentsvr是否开启共享内存恢复
	ENUM_FeatureToggleMacroType_TOGGLE_CHAT_USE_RESUME            ENUM_FeatureToggleMacroType = 28 //chatsvr是否开启共享内存恢复
	ENUM_FeatureToggleMacroType_TOGGLE_VIEW_USE_RESUME            ENUM_FeatureToggleMacroType = 29 //viewsvr是否开启共享内存恢复
	ENUM_FeatureToggleMacroType_TOGGLE_LEAVE_FUBEN_NEED_RESUME    ENUM_FeatureToggleMacroType = 30 //主动离开副本是否恢复
	ENUM_FeatureToggleMacroType_TOGGLE_FUBEN_RECONNCET            ENUM_FeatureToggleMacroType = 31 //副本断线重连测试开关
	ENUM_FeatureToggleMacroType_TOGGLE_FUBEN_MD5_CHECK            ENUM_FeatureToggleMacroType = 32 //副本MD5校验开关
	ENUM_FeatureToggleMacroType_TOGGLE_HOTRES_CHECK               ENUM_FeatureToggleMacroType = 33 //资源版本检查开发
	ENUM_FeatureToggleMacroType_TOGGLE_MATCH_VERSION_CHECK        ENUM_FeatureToggleMacroType = 34 //匹配是否需要检查版本一致性
	ENUM_FeatureToggleMacroType_TOGGLE_SUPORT_MUTLI_CE_TLOG       ENUM_FeatureToggleMacroType = 35 //tlog区分多套ce环境【上线后关掉】
	ENUM_FeatureToggleMacroType_TOGGLE_LOG_REAL_TIME              ENUM_FeatureToggleMacroType = 36 //日志是否使用实时时间
	ENUM_FeatureToggleMacroType_TOGGLE_PVP_OPEN_TIME              ENUM_FeatureToggleMacroType = 37 //是否开启PvpOpenTime限制，请见PvpOpenTime.xlsx
	ENUM_FeatureToggleMacroType_TOGGLE_FUBEN_OPEN_TIME            ENUM_FeatureToggleMacroType = 38 //是否开启FubenOpenTime限制，请见FubenOpenTimeInfo.xlsx
	ENUM_FeatureToggleMacroType_TOGGLE_IN_GAME_CHECK              ENUM_FeatureToggleMacroType = 39 //开局是否检查已经有单局
	ENUM_FeatureToggleMacroType_TOGGLE_VIP_ENTRY                  ENUM_FeatureToggleMacroType = 40 //会员、超会入口
	ENUM_FeatureToggleMacroType_TOGGLE_INVITE                     ENUM_FeatureToggleMacroType = 41 //邀请
	ENUM_FeatureToggleMacroType_TOGGLE_GAME_PRIVILEGE             ENUM_FeatureToggleMacroType = 42 //游戏特权
	ENUM_FeatureToggleMacroType_TOGGLE_PANDORA                    ENUM_FeatureToggleMacroType = 43 //潘多拉开关
	ENUM_FeatureToggleMacroType_TOGGLE_MICRO_COMMUNITY            ENUM_FeatureToggleMacroType = 44 //微社区入口开关
	ENUM_FeatureToggleMacroType_TOGGLE_TENCENT_ESPORT             ENUM_FeatureToggleMacroType = 45 //企鹅电竞
	ENUM_FeatureToggleMacroType_TOGGLE_XINYUE_PRIVILEGE           ENUM_FeatureToggleMacroType = 46 //心悦特权
	ENUM_FeatureToggleMacroType_TOGGLE_WEIXIN_MEDIA_PLATFORM      ENUM_FeatureToggleMacroType = 47 //微信公众号
	ENUM_FeatureToggleMacroType_TOGGLE_PACKAGE_CENTER             ENUM_FeatureToggleMacroType = 48 //礼包中心
	ENUM_FeatureToggleMacroType_TOGGLE_ANNOUNCEMENT               ENUM_FeatureToggleMacroType = 49 //公告(包括:登录前公告+登录后公告)
	ENUM_FeatureToggleMacroType_TOGGLE_ACTIVITY_ENTRY             ENUM_FeatureToggleMacroType = 50 //活动入口
	ENUM_FeatureToggleMacroType_TOGGLE_UPLOAD_VIDEO               ENUM_FeatureToggleMacroType = 51 //是否开启录像上传
)

// Enum value maps for ENUM_FeatureToggleMacroType.
var (
	ENUM_FeatureToggleMacroType_name = map[int32]string{
		0:  "TOGGLE_SAMPLE",
		1:  "TOGGLE_TEST",
		2:  "TOGGLE_MATCH",
		3:  "TOGGLE_EVENT",
		4:  "TOGGLE_GUILD",
		5:  "TOGGLE_EQUIP_SELL",
		6:  "TOGGLE_EQUIP_SWITCH",
		7:  "TOGGLE_EQUIP_UPGRADE",
		8:  "TOGGLE_WEAPON_STAR_UP",
		9:  "TOGGLE_TEAM_CREATE_TEAM",
		10: "TOGGLE_TEAM_REQ_MATCH",
		11: "TOGGLE_TEAM_JOIN_TEAM",
		12: "TOGGLE_BOUNTY_UNLOCK",
		13: "TOGGLE_RANK",
		14: "TOGGLE_MALL_SHOP",
		15: "TOGGLE_MALL_BUY",
		16: "TOGGLE_CHAT",
		17: "TOGGLE_GLOBAL_MAIL",
		18: "TOGGLE_ASSIST_SKILL",
		19: "TOGGLE_GAMEPLAY_STATISTIC",
		20: "TOGGLE_CHECK_CLIENT_VERSION_INCR",
		21: "TOGGLE_PC_PAY",
		22: "TOGGLE_TCAP_CMD_STAT",
		23: "TOGGLE_ITEM_BAG_FULL_IS_FAIL",
		24: "TOGGLE_ITEM_PRESSURE_BREAK_ADDOBJ",
		25: "TOGGLE_OPEN_CFG_SET",
		26: "TOGGLE_GAMEPLAY_START_NOT_CONNECT",
		27: "TOGGLE_PVPAGENT_USE_RESUME",
		28: "TOGGLE_CHAT_USE_RESUME",
		29: "TOGGLE_VIEW_USE_RESUME",
		30: "TOGGLE_LEAVE_FUBEN_NEED_RESUME",
		31: "TOGGLE_FUBEN_RECONNCET",
		32: "TOGGLE_FUBEN_MD5_CHECK",
		33: "TOGGLE_HOTRES_CHECK",
		34: "TOGGLE_MATCH_VERSION_CHECK",
		35: "TOGGLE_SUPORT_MUTLI_CE_TLOG",
		36: "TOGGLE_LOG_REAL_TIME",
		37: "TOGGLE_PVP_OPEN_TIME",
		38: "TOGGLE_FUBEN_OPEN_TIME",
		39: "TOGGLE_IN_GAME_CHECK",
		40: "TOGGLE_VIP_ENTRY",
		41: "TOGGLE_INVITE",
		42: "TOGGLE_GAME_PRIVILEGE",
		43: "TOGGLE_PANDORA",
		44: "TOGGLE_MICRO_COMMUNITY",
		45: "TOGGLE_TENCENT_ESPORT",
		46: "TOGGLE_XINYUE_PRIVILEGE",
		47: "TOGGLE_WEIXIN_MEDIA_PLATFORM",
		48: "TOGGLE_PACKAGE_CENTER",
		49: "TOGGLE_ANNOUNCEMENT",
		50: "TOGGLE_ACTIVITY_ENTRY",
		51: "TOGGLE_UPLOAD_VIDEO",
	}
	ENUM_FeatureToggleMacroType_value = map[string]int32{
		"TOGGLE_SAMPLE":                     0,
		"TOGGLE_TEST":                       1,
		"TOGGLE_MATCH":                      2,
		"TOGGLE_EVENT":                      3,
		"TOGGLE_GUILD":                      4,
		"TOGGLE_EQUIP_SELL":                 5,
		"TOGGLE_EQUIP_SWITCH":               6,
		"TOGGLE_EQUIP_UPGRADE":              7,
		"TOGGLE_WEAPON_STAR_UP":             8,
		"TOGGLE_TEAM_CREATE_TEAM":           9,
		"TOGGLE_TEAM_REQ_MATCH":             10,
		"TOGGLE_TEAM_JOIN_TEAM":             11,
		"TOGGLE_BOUNTY_UNLOCK":              12,
		"TOGGLE_RANK":                       13,
		"TOGGLE_MALL_SHOP":                  14,
		"TOGGLE_MALL_BUY":                   15,
		"TOGGLE_CHAT":                       16,
		"TOGGLE_GLOBAL_MAIL":                17,
		"TOGGLE_ASSIST_SKILL":               18,
		"TOGGLE_GAMEPLAY_STATISTIC":         19,
		"TOGGLE_CHECK_CLIENT_VERSION_INCR":  20,
		"TOGGLE_PC_PAY":                     21,
		"TOGGLE_TCAP_CMD_STAT":              22,
		"TOGGLE_ITEM_BAG_FULL_IS_FAIL":      23,
		"TOGGLE_ITEM_PRESSURE_BREAK_ADDOBJ": 24,
		"TOGGLE_OPEN_CFG_SET":               25,
		"TOGGLE_GAMEPLAY_START_NOT_CONNECT": 26,
		"TOGGLE_PVPAGENT_USE_RESUME":        27,
		"TOGGLE_CHAT_USE_RESUME":            28,
		"TOGGLE_VIEW_USE_RESUME":            29,
		"TOGGLE_LEAVE_FUBEN_NEED_RESUME":    30,
		"TOGGLE_FUBEN_RECONNCET":            31,
		"TOGGLE_FUBEN_MD5_CHECK":            32,
		"TOGGLE_HOTRES_CHECK":               33,
		"TOGGLE_MATCH_VERSION_CHECK":        34,
		"TOGGLE_SUPORT_MUTLI_CE_TLOG":       35,
		"TOGGLE_LOG_REAL_TIME":              36,
		"TOGGLE_PVP_OPEN_TIME":              37,
		"TOGGLE_FUBEN_OPEN_TIME":            38,
		"TOGGLE_IN_GAME_CHECK":              39,
		"TOGGLE_VIP_ENTRY":                  40,
		"TOGGLE_INVITE":                     41,
		"TOGGLE_GAME_PRIVILEGE":             42,
		"TOGGLE_PANDORA":                    43,
		"TOGGLE_MICRO_COMMUNITY":            44,
		"TOGGLE_TENCENT_ESPORT":             45,
		"TOGGLE_XINYUE_PRIVILEGE":           46,
		"TOGGLE_WEIXIN_MEDIA_PLATFORM":      47,
		"TOGGLE_PACKAGE_CENTER":             48,
		"TOGGLE_ANNOUNCEMENT":               49,
		"TOGGLE_ACTIVITY_ENTRY":             50,
		"TOGGLE_UPLOAD_VIDEO":               51,
	}
)

func (x ENUM_FeatureToggleMacroType) Enum() *ENUM_FeatureToggleMacroType {
	p := new(ENUM_FeatureToggleMacroType)
	*p = x
	return p
}

func (x ENUM_FeatureToggleMacroType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ENUM_FeatureToggleMacroType) Descriptor() protoreflect.EnumDescriptor {
	return file_cs_com_def_proto_enumTypes[0].Descriptor()
}

func (ENUM_FeatureToggleMacroType) Type() protoreflect.EnumType {
	return &file_cs_com_def_proto_enumTypes[0]
}

func (x ENUM_FeatureToggleMacroType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ENUM_FeatureToggleMacroType.Descriptor instead.
func (ENUM_FeatureToggleMacroType) EnumDescriptor() ([]byte, []int) {
	return file_cs_com_def_proto_rawDescGZIP(), []int{0}
}

var File_cs_com_def_proto protoreflect.FileDescriptor

var file_cs_com_def_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x2a, 0xf0, 0x0a, 0x0a, 0x1b, 0x45, 0x4e, 0x55, 0x4d, 0x5f,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x63,
	0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45,
	0x5f, 0x53, 0x41, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x47,
	0x47, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x4f,
	0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x10,
	0x0a, 0x0c, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x47, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x04,
	0x12, 0x15, 0x0a, 0x11, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50,
	0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50, 0x5f, 0x53, 0x57, 0x49, 0x54, 0x43, 0x48, 0x10, 0x06,
	0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x50,
	0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f,
	0x47, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x5f, 0x55, 0x50, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d,
	0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x41,
	0x4d, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x10, 0x0a, 0x12, 0x19, 0x0a,
	0x15, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x4a, 0x4f, 0x49,
	0x4e, 0x5f, 0x54, 0x45, 0x41, 0x4d, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x47, 0x47,
	0x4c, 0x45, 0x5f, 0x42, 0x4f, 0x55, 0x4e, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x52, 0x41, 0x4e,
	0x4b, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4d, 0x41,
	0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x50, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x4f, 0x47,
	0x47, 0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x4c, 0x4c, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x0f, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x10, 0x12,
	0x16, 0x0a, 0x12, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c,
	0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x11, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x53, 0x54, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x12,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x50,
	0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x53, 0x54, 0x49, 0x43, 0x10, 0x13, 0x12,
	0x24, 0x0a, 0x20, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x5f,
	0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49,
	0x4e, 0x43, 0x52, 0x10, 0x14, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f,
	0x50, 0x43, 0x5f, 0x50, 0x41, 0x59, 0x10, 0x15, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x47, 0x47,
	0x4c, 0x45, 0x5f, 0x54, 0x43, 0x41, 0x50, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x10, 0x16, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x49, 0x54, 0x45,
	0x4d, 0x5f, 0x42, 0x41, 0x47, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x49, 0x53, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x17, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x49,
	0x54, 0x45, 0x4d, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x5f, 0x42, 0x52, 0x45,
	0x41, 0x4b, 0x5f, 0x41, 0x44, 0x44, 0x4f, 0x42, 0x4a, 0x10, 0x18, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x43, 0x46, 0x47, 0x5f, 0x53,
	0x45, 0x54, 0x10, 0x19, 0x12, 0x25, 0x0a, 0x21, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x47,
	0x41, 0x4d, 0x45, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x1a, 0x12, 0x1e, 0x0a, 0x1a, 0x54,
	0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x56, 0x50, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x55,
	0x53, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x1b, 0x12, 0x1a, 0x0a, 0x16, 0x54,
	0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x1c, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4d,
	0x45, 0x10, 0x1d, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4c, 0x45,
	0x41, 0x56, 0x45, 0x5f, 0x46, 0x55, 0x42, 0x45, 0x4e, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x52,
	0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x1e, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x5f, 0x46, 0x55, 0x42, 0x45, 0x4e, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x4e, 0x43, 0x45,
	0x54, 0x10, 0x1f, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x46, 0x55,
	0x42, 0x45, 0x4e, 0x5f, 0x4d, 0x44, 0x35, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x20, 0x12,
	0x17, 0x0a, 0x13, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x48, 0x4f, 0x54, 0x52, 0x45, 0x53,
	0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x21, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x4f, 0x47, 0x47,
	0x4c, 0x45, 0x5f, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x22, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x4f, 0x47, 0x47,
	0x4c, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x4d, 0x55, 0x54, 0x4c, 0x49, 0x5f,
	0x43, 0x45, 0x5f, 0x54, 0x4c, 0x4f, 0x47, 0x10, 0x23, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x47,
	0x47, 0x4c, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x24, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x56,
	0x50, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x25, 0x12, 0x1a, 0x0a,
	0x16, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x46, 0x55, 0x42, 0x45, 0x4e, 0x5f, 0x4f, 0x50,
	0x45, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x26, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x4f, 0x47,
	0x47, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x43, 0x48, 0x45, 0x43,
	0x4b, 0x10, 0x27, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x56, 0x49,
	0x50, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x28, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4f, 0x47,
	0x47, 0x4c, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45, 0x10, 0x29, 0x12, 0x19, 0x0a, 0x15,
	0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x56,
	0x49, 0x4c, 0x45, 0x47, 0x45, 0x10, 0x2a, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x5f, 0x50, 0x41, 0x4e, 0x44, 0x4f, 0x52, 0x41, 0x10, 0x2b, 0x12, 0x1a, 0x0a, 0x16, 0x54,
	0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x4d, 0x49, 0x43, 0x52, 0x4f, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x55, 0x4e, 0x49, 0x54, 0x59, 0x10, 0x2c, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x47, 0x47, 0x4c,
	0x45, 0x5f, 0x54, 0x45, 0x4e, 0x43, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x2d, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x58, 0x49, 0x4e,
	0x59, 0x55, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x56, 0x49, 0x4c, 0x45, 0x47, 0x45, 0x10, 0x2e, 0x12,
	0x20, 0x0a, 0x1c, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x57, 0x45, 0x49, 0x58, 0x49, 0x4e,
	0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x10,
	0x2f, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x41, 0x43, 0x4b,
	0x41, 0x47, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x30, 0x12, 0x17, 0x0a, 0x13,
	0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x41, 0x4e, 0x4e, 0x4f, 0x55, 0x4e, 0x43, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x31, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x32,
	0x12, 0x17, 0x0a, 0x13, 0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41,
	0x44, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x33, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x65, 0x6e, 0x63, 0x68, 0x79, 0x2f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cs_com_def_proto_rawDescOnce sync.Once
	file_cs_com_def_proto_rawDescData = file_cs_com_def_proto_rawDesc
)

func file_cs_com_def_proto_rawDescGZIP() []byte {
	file_cs_com_def_proto_rawDescOnce.Do(func() {
		file_cs_com_def_proto_rawDescData = protoimpl.X.CompressGZIP(file_cs_com_def_proto_rawDescData)
	})
	return file_cs_com_def_proto_rawDescData
}

var file_cs_com_def_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cs_com_def_proto_goTypes = []interface{}{
	(ENUM_FeatureToggleMacroType)(0), // 0: pb.ENUM_FeatureToggleMacroType
}
var file_cs_com_def_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cs_com_def_proto_init() }
func file_cs_com_def_proto_init() {
	if File_cs_com_def_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cs_com_def_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cs_com_def_proto_goTypes,
		DependencyIndexes: file_cs_com_def_proto_depIdxs,
		EnumInfos:         file_cs_com_def_proto_enumTypes,
	}.Build()
	File_cs_com_def_proto = out.File
	file_cs_com_def_proto_rawDesc = nil
	file_cs_com_def_proto_goTypes = nil
	file_cs_com_def_proto_depIdxs = nil
}
