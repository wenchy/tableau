// Generated by tableauc 0.1.0. DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: test_conf.proto

package testpb

import (
	_ "github.com/Wenchy/tableau/proto/tableaupb"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityMap map[uint32]*Activity_Activity `protobuf:"bytes,1,rep,name=activity_map,json=activityMap,proto3" json:"activity_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetActivityMap() map[uint32]*Activity_Activity {
	if x != nil {
		return x.ActivityMap
	}
	return nil
}

type ExchangeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardMap map[uint32]*ExchangeInfo_Reward `protobuf:"bytes,1,rep,name=reward_map,json=rewardMap,proto3" json:"reward_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ExchangeInfo) Reset() {
	*x = ExchangeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeInfo) ProtoMessage() {}

func (x *ExchangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeInfo.ProtoReflect.Descriptor instead.
func (*ExchangeInfo) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1}
}

func (x *ExchangeInfo) GetRewardMap() map[uint32]*ExchangeInfo_Reward {
	if x != nil {
		return x.RewardMap
	}
	return nil
}

type Activity_Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   uint32                                `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityName string                                `protobuf:"bytes,2,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	ChapterMap   map[uint32]*Activity_Activity_Chapter `protobuf:"bytes,3,rep,name=chapter_map,json=chapterMap,proto3" json:"chapter_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Activity_Activity) Reset() {
	*x = Activity_Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity_Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity_Activity) ProtoMessage() {}

func (x *Activity_Activity) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity_Activity.ProtoReflect.Descriptor instead.
func (*Activity_Activity) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Activity_Activity) GetActivityId() uint32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Activity_Activity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *Activity_Activity) GetChapterMap() map[uint32]*Activity_Activity_Chapter {
	if x != nil {
		return x.ChapterMap
	}
	return nil
}

type Activity_Activity_Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId   uint32                               `protobuf:"varint,1,opt,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty"`
	ChapterName string                               `protobuf:"bytes,2,opt,name=chapter_name,json=chapterName,proto3" json:"chapter_name,omitempty"`
	SectionList []*Activity_Activity_Chapter_Section `protobuf:"bytes,3,rep,name=section_list,json=sectionList,proto3" json:"section_list,omitempty"`
}

func (x *Activity_Activity_Chapter) Reset() {
	*x = Activity_Activity_Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity_Activity_Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity_Activity_Chapter) ProtoMessage() {}

func (x *Activity_Activity_Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity_Activity_Chapter.ProtoReflect.Descriptor instead.
func (*Activity_Activity_Chapter) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *Activity_Activity_Chapter) GetChapterId() uint32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *Activity_Activity_Chapter) GetChapterName() string {
	if x != nil {
		return x.ChapterName
	}
	return ""
}

func (x *Activity_Activity_Chapter) GetSectionList() []*Activity_Activity_Chapter_Section {
	if x != nil {
		return x.SectionList
	}
	return nil
}

type Activity_Activity_Chapter_Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SectionId       uint32                                    `protobuf:"varint,1,opt,name=section_id,json=sectionId,proto3" json:"section_id,omitempty"`
	SectionName     string                                    `protobuf:"bytes,2,opt,name=section_name,json=sectionName,proto3" json:"section_name,omitempty"`
	SectionItemList []*Activity_Activity_Chapter_Section_Item `protobuf:"bytes,3,rep,name=section_item_list,json=sectionItemList,proto3" json:"section_item_list,omitempty"`
	Duration        *Duration                                 `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Timespan        *duration.Duration                        `protobuf:"bytes,5,opt,name=timespan,proto3" json:"timespan,omitempty"`
	Task            *Activity_Activity_Chapter_Section_Task   `protobuf:"bytes,6,opt,name=task,proto3" json:"task,omitempty"`
	WarnInfo        *Activity_Activity_Chapter_Section_Info   `protobuf:"bytes,7,opt,name=warn_info,json=warnInfo,proto3" json:"warn_info,omitempty"`
	IncellStruct    *Activity_Activity_Chapter_Section_Info   `protobuf:"bytes,8,opt,name=incell_struct,json=incellStruct,proto3" json:"incell_struct,omitempty"`
	IntParams       []int32                                   `protobuf:"varint,9,rep,packed,name=int_params,json=intParams,proto3" json:"int_params,omitempty"`
	Tips            map[int32]string                          `protobuf:"bytes,10,rep,name=tips,proto3" json:"tips,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientParamList []string                                  `protobuf:"bytes,11,rep,name=client_param_list,json=clientParamList,proto3" json:"client_param_list,omitempty"`
}

func (x *Activity_Activity_Chapter_Section) Reset() {
	*x = Activity_Activity_Chapter_Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity_Activity_Chapter_Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity_Activity_Chapter_Section) ProtoMessage() {}

func (x *Activity_Activity_Chapter_Section) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity_Activity_Chapter_Section.ProtoReflect.Descriptor instead.
func (*Activity_Activity_Chapter_Section) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1, 1, 0}
}

func (x *Activity_Activity_Chapter_Section) GetSectionId() uint32 {
	if x != nil {
		return x.SectionId
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section) GetSectionName() string {
	if x != nil {
		return x.SectionName
	}
	return ""
}

func (x *Activity_Activity_Chapter_Section) GetSectionItemList() []*Activity_Activity_Chapter_Section_Item {
	if x != nil {
		return x.SectionItemList
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetDuration() *Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetTimespan() *duration.Duration {
	if x != nil {
		return x.Timespan
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetTask() *Activity_Activity_Chapter_Section_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetWarnInfo() *Activity_Activity_Chapter_Section_Info {
	if x != nil {
		return x.WarnInfo
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetIncellStruct() *Activity_Activity_Chapter_Section_Info {
	if x != nil {
		return x.IncellStruct
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetIntParams() []int32 {
	if x != nil {
		return x.IntParams
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetTips() map[int32]string {
	if x != nil {
		return x.Tips
	}
	return nil
}

func (x *Activity_Activity_Chapter_Section) GetClientParamList() []string {
	if x != nil {
		return x.ClientParamList
	}
	return nil
}

type Activity_Activity_Chapter_Section_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Num int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *Activity_Activity_Chapter_Section_Item) Reset() {
	*x = Activity_Activity_Chapter_Section_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity_Activity_Chapter_Section_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity_Activity_Chapter_Section_Item) ProtoMessage() {}

func (x *Activity_Activity_Chapter_Section_Item) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity_Activity_Chapter_Section_Item.ProtoReflect.Descriptor instead.
func (*Activity_Activity_Chapter_Section_Item) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1, 1, 0, 0}
}

func (x *Activity_Activity_Chapter_Section_Item) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section_Item) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type Activity_Activity_Chapter_Section_Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Param_1 int32 `protobuf:"varint,2,opt,name=param_1,json=param1,proto3" json:"param_1,omitempty"`
	Param_2 int32 `protobuf:"varint,3,opt,name=param_2,json=param2,proto3" json:"param_2,omitempty"`
	Param_3 int32 `protobuf:"varint,4,opt,name=param_3,json=param3,proto3" json:"param_3,omitempty"`
	Target  int32 `protobuf:"varint,5,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Activity_Activity_Chapter_Section_Task) Reset() {
	*x = Activity_Activity_Chapter_Section_Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity_Activity_Chapter_Section_Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity_Activity_Chapter_Section_Task) ProtoMessage() {}

func (x *Activity_Activity_Chapter_Section_Task) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity_Activity_Chapter_Section_Task.ProtoReflect.Descriptor instead.
func (*Activity_Activity_Chapter_Section_Task) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1, 1, 0, 1}
}

func (x *Activity_Activity_Chapter_Section_Task) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section_Task) GetParam_1() int32 {
	if x != nil {
		return x.Param_1
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section_Task) GetParam_2() int32 {
	if x != nil {
		return x.Param_2
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section_Task) GetParam_3() int32 {
	if x != nil {
		return x.Param_3
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section_Task) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

type Activity_Activity_Chapter_Section_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc  string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Value int32  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Activity_Activity_Chapter_Section_Info) Reset() {
	*x = Activity_Activity_Chapter_Section_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity_Activity_Chapter_Section_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity_Activity_Chapter_Section_Info) ProtoMessage() {}

func (x *Activity_Activity_Chapter_Section_Info) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity_Activity_Chapter_Section_Info.ProtoReflect.Descriptor instead.
func (*Activity_Activity_Chapter_Section_Info) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{0, 1, 1, 0, 2}
}

func (x *Activity_Activity_Chapter_Section_Info) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity_Activity_Chapter_Section_Info) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Activity_Activity_Chapter_Section_Info) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ExchangeInfo_Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc      string               `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	BeginTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	Date      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Time      *duration.Duration   `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *ExchangeInfo_Reward) Reset() {
	*x = ExchangeInfo_Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_conf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeInfo_Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeInfo_Reward) ProtoMessage() {}

func (x *ExchangeInfo_Reward) ProtoReflect() protoreflect.Message {
	mi := &file_test_conf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeInfo_Reward.ProtoReflect.Descriptor instead.
func (*ExchangeInfo_Reward) Descriptor() ([]byte, []int) {
	return file_test_conf_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ExchangeInfo_Reward) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExchangeInfo_Reward) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ExchangeInfo_Reward) GetBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.BeginTime
	}
	return nil
}

func (x *ExchangeInfo_Reward) GetDate() *timestamp.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ExchangeInfo_Reward) GetTime() *duration.Duration {
	if x != nil {
		return x.Time
	}
	return nil
}

var File_test_conf_proto protoreflect.FileDescriptor

var file_test_conf_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x74, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61,
	0x75, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x61, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x0f, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x12, 0x54, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x10, 0x82, 0xb5, 0x18, 0x0c, 0x22, 0x0a,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x1a, 0x57, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0xd8, 0x0d, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x10, 0x82, 0xb5, 0x18, 0x0c, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x49, 0x44, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x37, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x82, 0xb5, 0x18, 0x0e, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0f, 0x82, 0xb5, 0x18, 0x0b, 0x22, 0x09, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x1a, 0x5e, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0xa4, 0x0b, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x12, 0x2e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x82, 0xb5, 0x18, 0x02, 0x28, 0x01, 0x52, 0x0b, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xde, 0x09, 0x0a, 0x07, 0x53,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0f, 0x82, 0xb5, 0x18, 0x0b,
	0x0a, 0x09, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x82, 0xb5,
	0x18, 0x0d, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x0b, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x6d, 0x0a, 0x11,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x13, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0b, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x28, 0x02, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x82,
	0xb5, 0x18, 0x0a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x82, 0xb5, 0x18, 0x0a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x6e, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x4c,
	0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x0a, 0x82, 0xb5, 0x18, 0x06,
	0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x5b, 0x0a, 0x09,
	0x77, 0x61, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x10, 0x82,
	0xb5, 0x18, 0x0c, 0x0a, 0x08, 0x57, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x1a, 0x52,
	0x08, 0x77, 0x61, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x67, 0x0a, 0x0d, 0x69, 0x6e, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x14,
	0x82, 0xb5, 0x18, 0x10, 0x0a, 0x0c, 0x49, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x18, 0x1a, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x42, 0x11, 0x82, 0xb5, 0x18, 0x0d, 0x0a, 0x09, 0x49, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x18, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x53, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x70, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0c, 0x82, 0xb5, 0x18, 0x08, 0x0a, 0x04, 0x54, 0x69, 0x70,
	0x73, 0x18, 0x19, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x13, 0x82, 0xb5, 0x18, 0x0f, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x28, 0x02, 0x52, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3d, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x08,
	0x82, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x09, 0x82, 0xb5, 0x18, 0x05, 0x0a,
	0x03, 0x4e, 0x75, 0x6d, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x1a, 0xc1, 0x01, 0x0a, 0x04, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x0a, 0x82, 0xb5, 0x18, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x0c, 0x82, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x31, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x31, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0x82, 0xb5, 0x18, 0x08,
	0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x32, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x32,
	0x12, 0x25, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0c, 0x82, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x33, 0x12, 0x24, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0c, 0x82, 0xb5, 0x18, 0x08, 0x0a, 0x06, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0x63, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x82,
	0xb5, 0x18, 0x06, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12,
	0x21, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b,
	0x82, 0xb5, 0x18, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x69, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x3a, 0x1a, 0x82, 0xb5, 0x18,
	0x16, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x10, 0x01, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x40, 0x01, 0x48, 0x01, 0x22, 0xd7, 0x03, 0x0a, 0x0c, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4a, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x08, 0x82, 0xb5, 0x18, 0x04, 0x22, 0x02, 0x49, 0x44, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4d, 0x61, 0x70, 0x1a, 0x57, 0x0a, 0x0e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4d, 0x61,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x85, 0x02,
	0x0a, 0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x42, 0x08, 0x82, 0xb5, 0x18, 0x04, 0x0a, 0x02, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x82, 0xb5, 0x18, 0x06, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x4a, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x0f, 0x82, 0xb5, 0x18, 0x0b, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x82, 0xb5, 0x18, 0x06, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x82, 0xb5, 0x18, 0x06, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x3a, 0x1a, 0x82, 0xb5, 0x18, 0x16, 0x0a, 0x08, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x01, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x40, 0x02, 0x48,
	0x02, 0x42, 0x3a, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x57, 0x65, 0x6e, 0x63, 0x68, 0x79, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2f, 0x63,
	0x6d, 0x64, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x62, 0x82, 0xb5,
	0x18, 0x0b, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x2e, 0x78, 0x6c, 0x73, 0x78, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_conf_proto_rawDescOnce sync.Once
	file_test_conf_proto_rawDescData = file_test_conf_proto_rawDesc
)

func file_test_conf_proto_rawDescGZIP() []byte {
	file_test_conf_proto_rawDescOnce.Do(func() {
		file_test_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_conf_proto_rawDescData)
	})
	return file_test_conf_proto_rawDescData
}

var file_test_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_test_conf_proto_goTypes = []interface{}{
	(*Activity)(nil),                  // 0: test.Activity
	(*ExchangeInfo)(nil),              // 1: test.ExchangeInfo
	nil,                               // 2: test.Activity.ActivityMapEntry
	(*Activity_Activity)(nil),         // 3: test.Activity.Activity
	nil,                               // 4: test.Activity.Activity.ChapterMapEntry
	(*Activity_Activity_Chapter)(nil), // 5: test.Activity.Activity.Chapter
	(*Activity_Activity_Chapter_Section)(nil),      // 6: test.Activity.Activity.Chapter.Section
	(*Activity_Activity_Chapter_Section_Item)(nil), // 7: test.Activity.Activity.Chapter.Section.Item
	(*Activity_Activity_Chapter_Section_Task)(nil), // 8: test.Activity.Activity.Chapter.Section.Task
	(*Activity_Activity_Chapter_Section_Info)(nil), // 9: test.Activity.Activity.Chapter.Section.Info
	nil,                         // 10: test.Activity.Activity.Chapter.Section.TipsEntry
	nil,                         // 11: test.ExchangeInfo.RewardMapEntry
	(*ExchangeInfo_Reward)(nil), // 12: test.ExchangeInfo.Reward
	(*Duration)(nil),            // 13: test.Duration
	(*duration.Duration)(nil),   // 14: google.protobuf.Duration
	(*timestamp.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_test_conf_proto_depIdxs = []int32{
	2,  // 0: test.Activity.activity_map:type_name -> test.Activity.ActivityMapEntry
	11, // 1: test.ExchangeInfo.reward_map:type_name -> test.ExchangeInfo.RewardMapEntry
	3,  // 2: test.Activity.ActivityMapEntry.value:type_name -> test.Activity.Activity
	4,  // 3: test.Activity.Activity.chapter_map:type_name -> test.Activity.Activity.ChapterMapEntry
	5,  // 4: test.Activity.Activity.ChapterMapEntry.value:type_name -> test.Activity.Activity.Chapter
	6,  // 5: test.Activity.Activity.Chapter.section_list:type_name -> test.Activity.Activity.Chapter.Section
	7,  // 6: test.Activity.Activity.Chapter.Section.section_item_list:type_name -> test.Activity.Activity.Chapter.Section.Item
	13, // 7: test.Activity.Activity.Chapter.Section.duration:type_name -> test.Duration
	14, // 8: test.Activity.Activity.Chapter.Section.timespan:type_name -> google.protobuf.Duration
	8,  // 9: test.Activity.Activity.Chapter.Section.task:type_name -> test.Activity.Activity.Chapter.Section.Task
	9,  // 10: test.Activity.Activity.Chapter.Section.warn_info:type_name -> test.Activity.Activity.Chapter.Section.Info
	9,  // 11: test.Activity.Activity.Chapter.Section.incell_struct:type_name -> test.Activity.Activity.Chapter.Section.Info
	10, // 12: test.Activity.Activity.Chapter.Section.tips:type_name -> test.Activity.Activity.Chapter.Section.TipsEntry
	12, // 13: test.ExchangeInfo.RewardMapEntry.value:type_name -> test.ExchangeInfo.Reward
	15, // 14: test.ExchangeInfo.Reward.begin_time:type_name -> google.protobuf.Timestamp
	15, // 15: test.ExchangeInfo.Reward.date:type_name -> google.protobuf.Timestamp
	14, // 16: test.ExchangeInfo.Reward.time:type_name -> google.protobuf.Duration
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_test_conf_proto_init() }
func file_test_conf_proto_init() {
	if File_test_conf_proto != nil {
		return
	}
	file_time_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_test_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity_Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity_Activity_Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity_Activity_Chapter_Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity_Activity_Chapter_Section_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity_Activity_Chapter_Section_Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity_Activity_Chapter_Section_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_conf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeInfo_Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_conf_proto_goTypes,
		DependencyIndexes: file_test_conf_proto_depIdxs,
		MessageInfos:      file_test_conf_proto_msgTypes,
	}.Build()
	File_test_conf_proto = out.File
	file_test_conf_proto_rawDesc = nil
	file_test_conf_proto_goTypes = nil
	file_test_conf_proto_depIdxs = nil
}
