// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: tableau_options.proto

package tableaupb

import (
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// field type.
type Type int32

const (
	// auto deduced protobuf types
	Type_TYPE_DEFAULT Type = 0
	//////////////////////////////
	/////Build-in Types///////////
	//////////////////////////////
	// interger
	Type_TYPE_INT32  Type = 1
	Type_TYPE_UINT32 Type = 2
	Type_TYPE_INT64  Type = 3
	Type_TYPE_UINT64 Type = 4
	// floating-point number
	Type_TYPE_DOUBLE Type = 5
	Type_TYPE_FLOAT  Type = 6
	// bool
	Type_TYPE_BOOL Type = 7
	// string
	Type_TYPE_STRING Type = 8
	////////////////////////
	/////Message Type//////
	////////////////////////
	Type_TYPE_MESSSAGE Type = 10
	////////////////////////
	/////Extended Types/////
	////////////////////////
	// time
	Type_TYPE_DATE     Type = 21 // format: "yyyy-MM-dd"
	Type_TYPE_TIME     Type = 22 // format: "HH:mm:ss"
	Type_TYPE_DATETIME Type = 23 // format: "yyyy-MM-dd HH:mm:ss"
	// list in a cell:
	// - the list **item** must be **built-in** type
	// - format: ',' separated items
	Type_TYPE_INCELL_LIST Type = 24
	// map in a cell:
	// - both the **key** and **value** must be **built-in** type
	// - format: key-value pairs is separated by ',', and
	//           key and value is separated by ':'
	Type_TYPE_INCELL_MAP Type = 25
	// message in a cell
	Type_TYPE_INCELL_MESSAGE Type = 26
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		0:  "TYPE_DEFAULT",
		1:  "TYPE_INT32",
		2:  "TYPE_UINT32",
		3:  "TYPE_INT64",
		4:  "TYPE_UINT64",
		5:  "TYPE_DOUBLE",
		6:  "TYPE_FLOAT",
		7:  "TYPE_BOOL",
		8:  "TYPE_STRING",
		10: "TYPE_MESSSAGE",
		21: "TYPE_DATE",
		22: "TYPE_TIME",
		23: "TYPE_DATETIME",
		24: "TYPE_INCELL_LIST",
		25: "TYPE_INCELL_MAP",
		26: "TYPE_INCELL_MESSAGE",
	}
	Type_value = map[string]int32{
		"TYPE_DEFAULT":        0,
		"TYPE_INT32":          1,
		"TYPE_UINT32":         2,
		"TYPE_INT64":          3,
		"TYPE_UINT64":         4,
		"TYPE_DOUBLE":         5,
		"TYPE_FLOAT":          6,
		"TYPE_BOOL":           7,
		"TYPE_STRING":         8,
		"TYPE_MESSSAGE":       10,
		"TYPE_DATE":           21,
		"TYPE_TIME":           22,
		"TYPE_DATETIME":       23,
		"TYPE_INCELL_LIST":    24,
		"TYPE_INCELL_MAP":     25,
		"TYPE_INCELL_MESSAGE": 26,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_tableau_options_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_tableau_options_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_tableau_options_proto_rawDescGZIP(), []int{0}
}

// layout of composite types, such as list and map.
type Layout int32

const (
	Layout_LAYOUT_DEFAULT    Layout = 0 // default direction: vertical for map, horizontal for list
	Layout_LAYOUT_VERTICAL   Layout = 1 // vertical direction
	Layout_LAYOUT_HORIZONTAL Layout = 2 // horizontal direction
)

// Enum value maps for Layout.
var (
	Layout_name = map[int32]string{
		0: "LAYOUT_DEFAULT",
		1: "LAYOUT_VERTICAL",
		2: "LAYOUT_HORIZONTAL",
	}
	Layout_value = map[string]int32{
		"LAYOUT_DEFAULT":    0,
		"LAYOUT_VERTICAL":   1,
		"LAYOUT_HORIZONTAL": 2,
	}
)

func (x Layout) Enum() *Layout {
	p := new(Layout)
	*p = x
	return p
}

func (x Layout) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Layout) Descriptor() protoreflect.EnumDescriptor {
	return file_tableau_options_proto_enumTypes[1].Descriptor()
}

func (Layout) Type() protoreflect.EnumType {
	return &file_tableau_options_proto_enumTypes[1]
}

func (x Layout) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Layout.Descriptor instead.
func (Layout) EnumDescriptor() ([]byte, []int) {
	return file_tableau_options_proto_rawDescGZIP(), []int{1}
}

type Workbook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // workbook name
}

func (x *Workbook) Reset() {
	*x = Workbook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workbook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workbook) ProtoMessage() {}

func (x *Workbook) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workbook.ProtoReflect.Descriptor instead.
func (*Workbook) Descriptor() ([]byte, []int) {
	return file_tableau_options_proto_rawDescGZIP(), []int{0}
}

func (x *Workbook) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Worksheet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`            // worksheet name
	Namerow   int32  `protobuf:"varint,2,opt,name=namerow,proto3" json:"namerow,omitempty"`     // [default = 1]; // exact row number of name at worksheet
	Typerow   int32  `protobuf:"varint,3,opt,name=typerow,proto3" json:"typerow,omitempty"`     // [default = 2]; // TODO: exact row number of type at worksheet, for generating protos.
	Descrow   int32  `protobuf:"varint,4,opt,name=descrow,proto3" json:"descrow,omitempty"`     // [default = 1]; // exact row number of description at wooksheet
	Datarow   int32  `protobuf:"varint,5,opt,name=datarow,proto3" json:"datarow,omitempty"`     // [default = 2]; // start row number of data
	Transpose bool   `protobuf:"varint,6,opt,name=transpose,proto3" json:"transpose,omitempty"` // [default = false]; // interchange the rows and columns
	Tags      string `protobuf:"bytes,7,opt,name=tags,proto3" json:"tags,omitempty"`            // [default = ""]; // tags for usage, e.g.: "1,2" specifying loading servers. Speciallly, "*"
}

func (x *Worksheet) Reset() {
	*x = Worksheet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Worksheet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worksheet) ProtoMessage() {}

func (x *Worksheet) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worksheet.ProtoReflect.Descriptor instead.
func (*Worksheet) Descriptor() ([]byte, []int) {
	return file_tableau_options_proto_rawDescGZIP(), []int{1}
}

func (x *Worksheet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Worksheet) GetNamerow() int32 {
	if x != nil {
		return x.Namerow
	}
	return 0
}

func (x *Worksheet) GetTyperow() int32 {
	if x != nil {
		return x.Typerow
	}
	return 0
}

func (x *Worksheet) GetDescrow() int32 {
	if x != nil {
		return x.Descrow
	}
	return 0
}

func (x *Worksheet) GetDatarow() int32 {
	if x != nil {
		return x.Datarow
	}
	return 0
}

func (x *Worksheet) GetTranspose() bool {
	if x != nil {
		return x.Transpose
	}
	return false
}

func (x *Worksheet) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column name: the word `name` is self-explanatory to denote the metarow.
	// It means `name` if field's type is scalar,
	// or `name prefix` if field's type is composite such as List and Map.
	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   Type   `protobuf:"varint,2,opt,name=type,proto3,enum=tableau.Type" json:"type,omitempty"` // [default = TYPE_DEFAULT];
	Key    string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Layout Layout `protobuf:"varint,4,opt,name=layout,proto3,enum=tableau.Layout" json:"layout,omitempty"` // [default = COMPOSITE_LAYOUT_DEFAULT];
	Sep    string `protobuf:"bytes,5,opt,name=sep,proto3" json:"sep,omitempty"`                            // [default = ',']; separator
	Subsep string `protobuf:"bytes,6,opt,name=subsep,proto3" json:"subsep,omitempty"`                      // [default = ':']; sub separator
	/////////////////////////////
	// Simple Validators Below //
	/////////////////////////////
	// Different meanings:
	// repeated: size range of array
	// integer: value range
	// string: count of utf-8 code point
	Min   int32  `protobuf:"varint,11,opt,name=min,proto3" json:"min,omitempty"`    // min value
	Max   int32  `protobuf:"varint,12,opt,name=max,proto3" json:"max,omitempty"`    // max value
	Range string `protobuf:"bytes,13,opt,name=range,proto3" json:"range,omitempty"` // format like set description: [1,10], (1,10], [1,10), [1,~]
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tableau_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_tableau_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_tableau_options_proto_rawDescGZIP(), []int{2}
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetType() Type {
	if x != nil {
		return x.Type
	}
	return Type_TYPE_DEFAULT
}

func (x *Field) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Field) GetLayout() Layout {
	if x != nil {
		return x.Layout
	}
	return Layout_LAYOUT_DEFAULT
}

func (x *Field) GetSep() string {
	if x != nil {
		return x.Sep
	}
	return ""
}

func (x *Field) GetSubsep() string {
	if x != nil {
		return x.Subsep
	}
	return ""
}

func (x *Field) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Field) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *Field) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

var file_tableau_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*Workbook)(nil),
		Field:         50000,
		Name:          "tableau.workbook",
		Tag:           "bytes,50000,opt,name=workbook",
		Filename:      "tableau_options.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*Worksheet)(nil),
		Field:         50000,
		Name:          "tableau.worksheet",
		Tag:           "bytes,50000,opt,name=worksheet",
		Filename:      "tableau_options.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*Field)(nil),
		Field:         50000,
		Name:          "tableau.field",
		Tag:           "bytes,50000,opt,name=field",
		Filename:      "tableau_options.proto",
	},
}

// Extension fields to descriptor.FileOptions.
var (
	// optional tableau.Workbook workbook = 50000;
	E_Workbook = &file_tableau_options_proto_extTypes[0]
)

// Extension fields to descriptor.MessageOptions.
var (
	// optional tableau.Worksheet worksheet = 50000;
	E_Worksheet = &file_tableau_options_proto_extTypes[1]
)

// Extension fields to descriptor.FieldOptions.
var (
	// optional tableau.Field field = 50000;
	E_Field = &file_tableau_options_proto_extTypes[2]
)

var File_tableau_options_proto protoreflect.FileDescriptor

var file_tableau_options_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x09, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x72, 0x6f, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x61, 0x6d, 0x65, 0x72, 0x6f, 0x77, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x74, 0x79, 0x70, 0x65, 0x72, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x72, 0x6f, 0x77, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x72, 0x6f, 0x77, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xdd,
	0x01, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x61, 0x75, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x4c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x62, 0x73, 0x65, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x62, 0x73, 0x65, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0xa3,
	0x02, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x0a, 0x12,
	0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x15, 0x12, 0x0d,
	0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x16, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10, 0x17,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x10, 0x18, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x4d, 0x41, 0x50, 0x10, 0x19, 0x12, 0x17, 0x0a, 0x13, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x10, 0x1a, 0x2a, 0x48, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x12,
	0x0a, 0x0e, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54,
	0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x41, 0x59, 0x4f, 0x55, 0x54, 0x5f, 0x56, 0x45, 0x52,
	0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x41, 0x59, 0x4f, 0x55,
	0x54, 0x5f, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x54, 0x41, 0x4c, 0x10, 0x02, 0x3a, 0x4d,
	0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x62,
	0x6f, 0x6f, 0x6b, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x6f, 0x6f, 0x6b, 0x3a, 0x53, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x3a, 0x45, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x57, 0x65, 0x6e, 0x63, 0x68, 0x79, 0x2f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x61, 0x75, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x61, 0x75, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tableau_options_proto_rawDescOnce sync.Once
	file_tableau_options_proto_rawDescData = file_tableau_options_proto_rawDesc
)

func file_tableau_options_proto_rawDescGZIP() []byte {
	file_tableau_options_proto_rawDescOnce.Do(func() {
		file_tableau_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_tableau_options_proto_rawDescData)
	})
	return file_tableau_options_proto_rawDescData
}

var file_tableau_options_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tableau_options_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tableau_options_proto_goTypes = []interface{}{
	(Type)(0),                         // 0: tableau.Type
	(Layout)(0),                       // 1: tableau.Layout
	(*Workbook)(nil),                  // 2: tableau.Workbook
	(*Worksheet)(nil),                 // 3: tableau.Worksheet
	(*Field)(nil),                     // 4: tableau.Field
	(*descriptor.FileOptions)(nil),    // 5: google.protobuf.FileOptions
	(*descriptor.MessageOptions)(nil), // 6: google.protobuf.MessageOptions
	(*descriptor.FieldOptions)(nil),   // 7: google.protobuf.FieldOptions
}
var file_tableau_options_proto_depIdxs = []int32{
	0, // 0: tableau.Field.type:type_name -> tableau.Type
	1, // 1: tableau.Field.layout:type_name -> tableau.Layout
	5, // 2: tableau.workbook:extendee -> google.protobuf.FileOptions
	6, // 3: tableau.worksheet:extendee -> google.protobuf.MessageOptions
	7, // 4: tableau.field:extendee -> google.protobuf.FieldOptions
	2, // 5: tableau.workbook:type_name -> tableau.Workbook
	3, // 6: tableau.worksheet:type_name -> tableau.Worksheet
	4, // 7: tableau.field:type_name -> tableau.Field
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	5, // [5:8] is the sub-list for extension type_name
	2, // [2:5] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_tableau_options_proto_init() }
func file_tableau_options_proto_init() {
	if File_tableau_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tableau_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workbook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Worksheet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tableau_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tableau_options_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_tableau_options_proto_goTypes,
		DependencyIndexes: file_tableau_options_proto_depIdxs,
		EnumInfos:         file_tableau_options_proto_enumTypes,
		MessageInfos:      file_tableau_options_proto_msgTypes,
		ExtensionInfos:    file_tableau_options_proto_extTypes,
	}.Build()
	File_tableau_options_proto = out.File
	file_tableau_options_proto_rawDesc = nil
	file_tableau_options_proto_goTypes = nil
	file_tableau_options_proto_depIdxs = nil
}
